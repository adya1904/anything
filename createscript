base_file_name = "testAPI"

codetop = """         #common in every file # in the top of every file
import requests \n
import restapicalls\n 
def main( ):\n
"""

codebot = """                     #common in every file     #bottom of every file
if __name__ == "__main__":\n
           main() """


def createfile():              #create a file
    filename = base_file_name + 'auto' + ".py"         #sting to store the name of the file
    print(filename)    #printing file name
    try:
        

        file = open(filename, "a")    #open is a function to create file  # a stringparameter to create a file
    except :
        print ("unable to create file")
    return file


def create_test_script(method, endpoint, parameter):     
       #calling the createfile func that returns a file
    method_check = {'get', 'post', 'put' , 'delete'}     #validation of methods
    if method.lower() not in  method_check :
        print ('this is not a correct method')
        return 
    print (type(parameter))                              #validate dictationary
    if parameter is not None and type(parameter) is not dict:          
        print("parameter is invalid")
        return

    
    
    
    
    
    
    
    
    try:                                   #exception handeling
        file = createfile()    
        with open(file.name, 'w') as f:    #open(file.name, w) is for writing things into the file
            f.write(codetop)               #it will append all these into the new file
            f.write("    method ='" + method + "'\n")
            f.write("    endpoint='" + endpoint + "'\n")
            f.write("    parameter=" + str(parameter) + "\n")
            f.write("    resp=restapicalls.api_call(method,endpoint,parameter)\n")
            f.write("    print(resp)\n")
            f.write(codebot)
    except Exception as error:
        print (error)
        print ("file modification error")
        return
    
    return file                    # returning the newly created file

baseurl = 'https://virtserver.swaggerhub.com/imadyasha.padhee/MusicAPIZooniverese/1.0.0'

load= {'id': '4231'}
#api call 1- Get API
endpoint1 = baseurl + '/song'+"/"+load["id"]
method1 = 'get'
parameter1 = None
#create_test_script(method1, endpoint1, parameter1)

parameter2 = {"id": "4214","additionalMetadata":"Date22/11/19","file" : "songfile.mp4"}

endpoint2 = baseurl + '/song/' + parameter2['id']+'/uploadImage'
method2 = 'post'
create_test_script(method2, endpoint2,parameter2)
